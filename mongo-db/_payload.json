[{"data":1,"prerenderedAt":490},["ShallowReactive",2],{"content-query-GoFHVgRytf":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"draft":6,"tags":11,"thumbnail":16,"slug":17,"body":18,"_type":484,"_id":485,"_source":486,"_file":487,"_stem":488,"_extension":489},"/posts/mongo-db","posts",false,"","Integrating MongoDB and Mongoose with Nuxt 3","XYI SOSI","2023-10-06",[12,13,14,15],"nuxt","nuxt3","mongodb","mongoose","/img/mongodb.webp","mongo-db",{"type":19,"children":20,"toc":470},"root",[21,28,35,40,53,58,67,72,78,94,99,109,130,156,167,180,189,194,212,222,240,249,262,269,274,284,290,296,310,323,332,337,346,351,361,380,389,394,399,404,413,418,423,437,443,448],{"type":22,"tag":23,"props":24,"children":25},"element","p",{},[26],{"type":27,"value":9},"text",{"type":22,"tag":29,"props":30,"children":32},"h2",{"id":31},"prerequisites",[33],{"type":27,"value":34},"Prerequisites",{"type":22,"tag":23,"props":36,"children":37},{},[38],{"type":27,"value":39},"Before we get started, make sure you have a working nuxt 3 project. If you don't have one already, you can create a new project using the following command:",{"type":22,"tag":41,"props":42,"children":47},"pre",{"className":43,"code":45,"language":46,"meta":7},[44],"language-bash","npx nuxi init \u003Cproject-name>\n","bash",[48],{"type":22,"tag":49,"props":50,"children":51},"code",{"__ignoreMap":7},[52],{"type":27,"value":45},{"type":22,"tag":23,"props":54,"children":55},{},[56],{"type":27,"value":57},"Once the project is created, navigate to the project directory and install the dependencies:",{"type":22,"tag":41,"props":59,"children":62},{"className":60,"code":61,"language":46,"meta":7},[44],"cd \u003Cproject-name>\nnpm install // or yarn install\n",[63],{"type":22,"tag":49,"props":64,"children":65},{"__ignoreMap":7},[66],{"type":27,"value":61},{"type":22,"tag":23,"props":68,"children":69},{},[70],{"type":27,"value":71},"Now that we have a working nuxt 3 project, let's explore the two methods of adding MongoDB and Mongoose to our project.",{"type":22,"tag":29,"props":73,"children":75},{"id":74},"method-1-using-the-nuxt-server-utils-module",[76],{"type":27,"value":77},"Method 1: Using the nuxt-server-utils module",{"type":22,"tag":23,"props":79,"children":80},{},[81,83,92],{"type":27,"value":82},"This is the easiest way to add MongoDB and Mongoose to your Nuxt 3 project. The ",{"type":22,"tag":84,"props":85,"children":89},"a",{"href":86,"rel":87},"https://nuxt-server-utils.jahid.dev",[88],"nofollow",[90],{"type":27,"value":91},"nuxt-server-utils",{"type":27,"value":93}," module provides a set of utilities that allow you to interact with your MongoDB database from within your Nuxt 3 application. It also provides a simple API for creating and managing your MongoDB collections.",{"type":22,"tag":23,"props":95,"children":96},{},[97],{"type":27,"value":98},"To get started, install the nuxt-server-utils module using the following command:",{"type":22,"tag":41,"props":100,"children":104},{"className":101,"code":102,"filename":103,"language":46,"meta":7},[44],"npm install nuxt-server-utils mongoose\n","npm",[105],{"type":22,"tag":49,"props":106,"children":107},{"__ignoreMap":7},[108],{"type":27,"value":102},{"type":22,"tag":23,"props":110,"children":111},{},[112,114,120,122,128],{"type":27,"value":113},"Next, Add the nuxt-server-utils module to the ",{"type":22,"tag":49,"props":115,"children":117},{"className":116},[],[118],{"type":27,"value":119},"modules",{"type":27,"value":121}," section of your ",{"type":22,"tag":49,"props":123,"children":125},{"className":124},[],[126],{"type":27,"value":127},"nuxt.config.ts",{"type":27,"value":129}," file:",{"type":22,"tag":23,"props":131,"children":132},{},[133,135,140,142,147,149,154],{"type":27,"value":134},"Add ",{"type":22,"tag":49,"props":136,"children":138},{"className":137},[],[139],{"type":27,"value":91},{"type":27,"value":141}," to the ",{"type":22,"tag":49,"props":143,"children":145},{"className":144},[],[146],{"type":27,"value":119},{"type":27,"value":148}," section of ",{"type":22,"tag":49,"props":150,"children":152},{"className":151},[],[153],{"type":27,"value":127},{"type":27,"value":155},":",{"type":22,"tag":41,"props":157,"children":162},{"className":158,"code":160,"filename":127,"language":161,"meta":7},[159],"language-ts","export default defineNuxtConfig({\n  // ...\n  modules: [\"nuxt-server-utils\"],\n});\n","ts",[163],{"type":22,"tag":49,"props":164,"children":165},{"__ignoreMap":7},[166],{"type":27,"value":160},{"type":22,"tag":23,"props":168,"children":169},{},[170,172,178],{"type":27,"value":171},"Finally, add the MongoDB connection string to the ",{"type":22,"tag":49,"props":173,"children":175},{"className":174},[],[176],{"type":27,"value":177},".env",{"type":27,"value":179}," file of your nuxt app:",{"type":22,"tag":41,"props":181,"children":184},{"className":182,"code":183,"filename":177,"language":46,"meta":7},[44],"MONGODB_URI=\u003Cyour-mongodb-connection-string>\n",[185],{"type":22,"tag":49,"props":186,"children":187},{"__ignoreMap":7},[188],{"type":27,"value":183},{"type":22,"tag":23,"props":190,"children":191},{},[192],{"type":27,"value":193},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express. For example, let's create a simple server route that returns all the documents from a MongoDB collection:",{"type":22,"tag":23,"props":195,"children":196},{},[197,203,205,211],{"type":22,"tag":198,"props":199,"children":200},"strong",{},[201],{"type":27,"value":202},"Defining the Mongoose model",{"type":27,"value":204}," in ",{"type":22,"tag":49,"props":206,"children":208},{"className":207},[],[209],{"type":27,"value":210},"server/models/user.model.ts",{"type":27,"value":155},{"type":22,"tag":41,"props":213,"children":217},{"className":214,"code":215,"filename":216,"language":161,"meta":7},[159],"import { Schema, model } from \"mongoose\";\n\nconst UserSchema = new Schema({\n  name: String,\n  email: String,\n});\n\nexport const User = model(\"User\", UserSchema);\n","server/models/User.ts",[218],{"type":22,"tag":49,"props":219,"children":220},{"__ignoreMap":7},[221],{"type":27,"value":215},{"type":22,"tag":23,"props":223,"children":224},{},[225,227,232,233,239],{"type":27,"value":226},"Now let's create the ",{"type":22,"tag":198,"props":228,"children":229},{},[230],{"type":27,"value":231},"API Route",{"type":27,"value":204},{"type":22,"tag":49,"props":234,"children":236},{"className":235},[],[237],{"type":27,"value":238},"server/api/users.get.ts",{"type":27,"value":155},{"type":22,"tag":41,"props":241,"children":244},{"className":242,"code":243,"filename":238,"language":161,"meta":7},[159],"import { User } from \"~~/server/models/user.model\";\n\nexport default defineEventHandler(async (event) => {\n  const users = await User.find();\n\n  return Users;\n});\n",[245],{"type":22,"tag":49,"props":246,"children":247},{"__ignoreMap":7},[248],{"type":27,"value":243},{"type":22,"tag":23,"props":250,"children":251},{},[252,254,260],{"type":27,"value":253},"If you navigate to the ",{"type":22,"tag":49,"props":255,"children":257},{"className":256},[],[258],{"type":27,"value":259},"/api/users",{"type":27,"value":261}," route, you should see a list of all the users in your database.",{"type":22,"tag":263,"props":264,"children":266},"h3",{"id":265},"video-tutorial",[267],{"type":27,"value":268},"Video Tutorial",{"type":22,"tag":23,"props":270,"children":271},{},[272],{"type":27,"value":273},"If you enjoy learning through video tutorials, I have created a video where i walk you through the above steps:",{"type":22,"tag":23,"props":275,"children":276},{},[277],{"type":22,"tag":84,"props":278,"children":281},{"href":279,"rel":280},"https://www.youtube.com/embed/h10sAu3ETr8",[88],[282],{"type":27,"value":283},"YouTube video player",{"type":22,"tag":263,"props":285,"children":287},{"id":286},"example-project",[288],{"type":27,"value":289},"Example Project",{"type":22,"tag":29,"props":291,"children":293},{"id":292},"method-2-creating-a-nitro-plugin",[294],{"type":27,"value":295},"Method 2: Creating a Nitro plugin",{"type":22,"tag":23,"props":297,"children":298},{},[299,301,308],{"type":27,"value":300},"Nuxt 3 uses ",{"type":22,"tag":84,"props":302,"children":305},{"href":303,"rel":304},"https://nitro.unjs.io/",[88],[306],{"type":27,"value":307},"Nitro",{"type":27,"value":309}," under the hood to power its server-side rendering capabilities. Nitro provides a simple API for creating plugins that can be used to extend the functionality of your Nuxt 3 application. In this section, we'll create a Nitro plugin that will allow us to use MongoDB and Mongoose in our Nuxt 3 project.",{"type":22,"tag":23,"props":311,"children":312},{},[313,315,321],{"type":27,"value":314},"First, let's create a new plugin file in the ",{"type":22,"tag":49,"props":316,"children":318},{"className":317},[],[319],{"type":27,"value":320},"server/plugins",{"type":27,"value":322}," directory:",{"type":22,"tag":41,"props":324,"children":327},{"className":325,"code":326,"language":46,"meta":7},[44],"touch server/plugins/mongodb.ts\n",[328],{"type":22,"tag":49,"props":329,"children":330},{"__ignoreMap":7},[331],{"type":27,"value":326},{"type":22,"tag":23,"props":333,"children":334},{},[335],{"type":27,"value":336},"Then let's install the required dependencies:",{"type":22,"tag":41,"props":338,"children":341},{"className":339,"code":340,"language":46,"meta":7},[44],"npm install mongoose\n",[342],{"type":22,"tag":49,"props":343,"children":344},{"__ignoreMap":7},[345],{"type":27,"value":340},{"type":22,"tag":23,"props":347,"children":348},{},[349],{"type":27,"value":350},"Next, let's add the following code to the newly created plugin file:",{"type":22,"tag":41,"props":352,"children":356},{"className":353,"code":354,"filename":355,"language":161,"meta":7},[159],"import { Nitro } from \"nitropack\";\nimport mongoose from \"mongoose\";\n\nexport default async (_nitroApp: Nitro) => {\n  const config = useRuntimeConfig();\n\n  try {\n    await mongoose.connect(config.mongodbUri);\n    console.log(\"Connected to MongoDB\");\n  } catch (e) {\n    console.error(e);\n  }\n};\n","server/plugins/mongodb.ts",[357],{"type":22,"tag":49,"props":358,"children":359},{"__ignoreMap":7},[360],{"type":27,"value":354},{"type":22,"tag":23,"props":362,"children":363},{},[364,366,372,374,379],{"type":27,"value":365},"Finally, let's add the plugin to the ",{"type":22,"tag":49,"props":367,"children":369},{"className":368},[],[370],{"type":27,"value":371},"plugins",{"type":27,"value":373}," section of our ",{"type":22,"tag":49,"props":375,"children":377},{"className":376},[],[378],{"type":27,"value":127},{"type":27,"value":129},{"type":22,"tag":41,"props":381,"children":384},{"className":382,"code":383,"filename":127,"language":161,"meta":7},[159],"export default defineNuxtConfig({\n  // ...\n  nitro: {\n    plugins: [\"~/server/plugins/mongodb.ts\"],\n  },\n});\n",[385],{"type":22,"tag":49,"props":386,"children":387},{"__ignoreMap":7},[388],{"type":27,"value":383},{"type":22,"tag":23,"props":390,"children":391},{},[392],{"type":27,"value":393},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.",{"type":22,"tag":263,"props":395,"children":397},{"id":396},"video-tutorial-1",[398],{"type":27,"value":268},{"type":22,"tag":23,"props":400,"children":401},{},[402],{"type":27,"value":403},"If you prefer video tutorials, you can watch the following video where I walk you through the process of adding MongoDB and Mongoose to a Nuxt 3 project:",{"type":22,"tag":23,"props":405,"children":406},{},[407],{"type":22,"tag":84,"props":408,"children":411},{"href":409,"rel":410},"https://www.youtube.com/embed/EidO0c9L6b0",[88],[412],{"type":27,"value":283},{"type":22,"tag":263,"props":414,"children":416},{"id":415},"example-project-1",[417],{"type":27,"value":289},{"type":22,"tag":23,"props":419,"children":420},{},[421],{"type":27,"value":422},"Play around with the example project to get a better understanding of how to use MongoDB and Mongoose with Nuxt 3.",{"type":22,"tag":23,"props":424,"children":425},{},[426,428,435],{"type":27,"value":427},"You ca find the full source code of this example ",{"type":22,"tag":84,"props":429,"children":432},{"href":430,"rel":431},"https://github.com/jahidanowar/nuxt3-mongoose",[88],[433],{"type":27,"value":434},"here",{"type":27,"value":436},".",{"type":22,"tag":29,"props":438,"children":440},{"id":439},"conclusion",[441],{"type":27,"value":442},"Conclusion",{"type":22,"tag":23,"props":444,"children":445},{},[446],{"type":27,"value":447},"In this blog post, we explored two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":22,"tag":23,"props":449,"children":450},{},[451,453,460,462,469],{"type":27,"value":452},"If you have any questions or feedback, feel free to reach out to me on ",{"type":22,"tag":84,"props":454,"children":457},{"href":455,"rel":456},"https://jahid.dev/d",[88],[458],{"type":27,"value":459},"Discord",{"type":27,"value":461}," or ",{"type":22,"tag":84,"props":463,"children":466},{"href":464,"rel":465},"https://twitter.com/jahidDev",[88],[467],{"type":27,"value":468},"Twitter",{"type":27,"value":436},{"title":7,"searchDepth":471,"depth":471,"links":472},2,[473,474,479,483],{"id":31,"depth":471,"text":34},{"id":74,"depth":471,"text":77,"children":475},[476,478],{"id":265,"depth":477,"text":268},3,{"id":286,"depth":477,"text":289},{"id":292,"depth":471,"text":295,"children":480},[481,482],{"id":396,"depth":477,"text":268},{"id":415,"depth":477,"text":289},{"id":439,"depth":471,"text":442},"markdown","content:posts:mongo-db.md","content","posts/mongo-db.md","posts/mongo-db","md",1740423423902]