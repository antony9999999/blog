[{"data":1,"prerenderedAt":500},["ShallowReactive",2],{"content-query-GoFHVgRytf":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"draft":6,"tags":11,"thumbnail":16,"slug":17,"body":18,"_type":494,"_id":495,"_source":496,"_file":497,"_stem":498,"_extension":499},"/posts/mongo-db","posts",false,"","Integrating MongoDB and Mongoose with Nuxt 3","Building dynamic web applications often requires seamless integration with a robust database solution. When it comes to creating powerful server-side applications, MongoDB has emerged as a popular choice among developers due to its flexibility and scalability. Combined with the Vue.js framework, Nuxt.js provides a solid foundation for building fast, server-rendered applications. However, incorporating MongoDB and its object modeling tool, Mongoose, into a Nuxt project might seem like a daunting task for those new to the stack.","2023-10-06",[12,13,14,15],"nuxt","nuxt3","mongodb","mongoose","/img/mongodb.webp","mongo-db",{"type":19,"children":20,"toc":480},"root",[21,28,33,40,45,58,63,72,77,83,99,104,114,135,161,172,185,194,199,217,227,245,254,267,274,279,290,296,301,307,321,334,343,348,357,362,372,391,400,405,410,415,419,424,429,433,447,453,458],{"type":22,"tag":23,"props":24,"children":25},"element","p",{},[26],{"type":27,"value":9},"text",{"type":22,"tag":23,"props":29,"children":30},{},[31],{"type":27,"value":32},"In this blog post, we'll explore two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":22,"tag":34,"props":35,"children":37},"h2",{"id":36},"prerequisites",[38],{"type":27,"value":39},"Prerequisites",{"type":22,"tag":23,"props":41,"children":42},{},[43],{"type":27,"value":44},"Before we get started, make sure you have a working nuxt 3 project. If you don't have one already, you can create a new project using the following command:",{"type":22,"tag":46,"props":47,"children":52},"pre",{"className":48,"code":50,"language":51,"meta":7},[49],"language-bash","npx nuxi init \u003Cproject-name>\n","bash",[53],{"type":22,"tag":54,"props":55,"children":56},"code",{"__ignoreMap":7},[57],{"type":27,"value":50},{"type":22,"tag":23,"props":59,"children":60},{},[61],{"type":27,"value":62},"Once the project is created, navigate to the project directory and install the dependencies:",{"type":22,"tag":46,"props":64,"children":67},{"className":65,"code":66,"language":51,"meta":7},[49],"cd \u003Cproject-name>\nnpm install // or yarn install\n",[68],{"type":22,"tag":54,"props":69,"children":70},{"__ignoreMap":7},[71],{"type":27,"value":66},{"type":22,"tag":23,"props":73,"children":74},{},[75],{"type":27,"value":76},"Now that we have a working nuxt 3 project, let's explore the two methods of adding MongoDB and Mongoose to our project.",{"type":22,"tag":34,"props":78,"children":80},{"id":79},"method-1-using-the-nuxt-server-utils-module",[81],{"type":27,"value":82},"Method 1: Using the nuxt-server-utils module",{"type":22,"tag":23,"props":84,"children":85},{},[86,88,97],{"type":27,"value":87},"This is the easiest way to add MongoDB and Mongoose to your Nuxt 3 project. The ",{"type":22,"tag":89,"props":90,"children":94},"a",{"href":91,"rel":92},"https://nuxt-server-utils.jahid.dev",[93],"nofollow",[95],{"type":27,"value":96},"nuxt-server-utils",{"type":27,"value":98}," module provides a set of utilities that allow you to interact with your MongoDB database from within your Nuxt 3 application. It also provides a simple API for creating and managing your MongoDB collections.",{"type":22,"tag":23,"props":100,"children":101},{},[102],{"type":27,"value":103},"To get started, install the nuxt-server-utils module using the following command:",{"type":22,"tag":46,"props":105,"children":109},{"className":106,"code":107,"filename":108,"language":51,"meta":7},[49],"npm install nuxt-server-utils mongoose\n","npm",[110],{"type":22,"tag":54,"props":111,"children":112},{"__ignoreMap":7},[113],{"type":27,"value":107},{"type":22,"tag":23,"props":115,"children":116},{},[117,119,125,127,133],{"type":27,"value":118},"Next, Add the nuxt-server-utils module to the ",{"type":22,"tag":54,"props":120,"children":122},{"className":121},[],[123],{"type":27,"value":124},"modules",{"type":27,"value":126}," section of your ",{"type":22,"tag":54,"props":128,"children":130},{"className":129},[],[131],{"type":27,"value":132},"nuxt.config.ts",{"type":27,"value":134}," file:",{"type":22,"tag":23,"props":136,"children":137},{},[138,140,145,147,152,154,159],{"type":27,"value":139},"Add ",{"type":22,"tag":54,"props":141,"children":143},{"className":142},[],[144],{"type":27,"value":96},{"type":27,"value":146}," to the ",{"type":22,"tag":54,"props":148,"children":150},{"className":149},[],[151],{"type":27,"value":124},{"type":27,"value":153}," section of ",{"type":22,"tag":54,"props":155,"children":157},{"className":156},[],[158],{"type":27,"value":132},{"type":27,"value":160},":",{"type":22,"tag":46,"props":162,"children":167},{"className":163,"code":165,"filename":132,"language":166,"meta":7},[164],"language-ts","export default defineNuxtConfig({\n  // ...\n  modules: [\"nuxt-server-utils\"],\n});\n","ts",[168],{"type":22,"tag":54,"props":169,"children":170},{"__ignoreMap":7},[171],{"type":27,"value":165},{"type":22,"tag":23,"props":173,"children":174},{},[175,177,183],{"type":27,"value":176},"Finally, add the MongoDB connection string to the ",{"type":22,"tag":54,"props":178,"children":180},{"className":179},[],[181],{"type":27,"value":182},".env",{"type":27,"value":184}," file of your nuxt app:",{"type":22,"tag":46,"props":186,"children":189},{"className":187,"code":188,"filename":182,"language":51,"meta":7},[49],"MONGODB_URI=\u003Cyour-mongodb-connection-string>\n",[190],{"type":22,"tag":54,"props":191,"children":192},{"__ignoreMap":7},[193],{"type":27,"value":188},{"type":22,"tag":23,"props":195,"children":196},{},[197],{"type":27,"value":198},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.\nFor example, let's create a simple server route that returns all the documents from a MongoDB collection:",{"type":22,"tag":23,"props":200,"children":201},{},[202,208,210,216],{"type":22,"tag":203,"props":204,"children":205},"strong",{},[206],{"type":27,"value":207},"Defining the Mongoose model",{"type":27,"value":209}," in ",{"type":22,"tag":54,"props":211,"children":213},{"className":212},[],[214],{"type":27,"value":215},"server/models/user.model.ts",{"type":27,"value":160},{"type":22,"tag":46,"props":218,"children":222},{"className":219,"code":220,"filename":221,"language":166,"meta":7},[164],"import { Schema, model } from \"mongoose\";\n\nconst UserSchema = new Schema({\n  name: String,\n  email: String,\n});\n\nexport const User = model(\"User\", UserSchema);\n","server/models/User.ts",[223],{"type":22,"tag":54,"props":224,"children":225},{"__ignoreMap":7},[226],{"type":27,"value":220},{"type":22,"tag":23,"props":228,"children":229},{},[230,232,237,238,244],{"type":27,"value":231},"Now let's create the ",{"type":22,"tag":203,"props":233,"children":234},{},[235],{"type":27,"value":236},"API Route",{"type":27,"value":209},{"type":22,"tag":54,"props":239,"children":241},{"className":240},[],[242],{"type":27,"value":243},"server/api/users.get.ts",{"type":27,"value":160},{"type":22,"tag":46,"props":246,"children":249},{"className":247,"code":248,"filename":243,"language":166,"meta":7},[164],"import { User } from \"~~/server/models/user.model\";\n\nexport default defineEventHandler(async (event) => {\n  const users = await User.find();\n\n  return Users;\n});\n",[250],{"type":22,"tag":54,"props":251,"children":252},{"__ignoreMap":7},[253],{"type":27,"value":248},{"type":22,"tag":23,"props":255,"children":256},{},[257,259,265],{"type":27,"value":258},"If you navigate to the ",{"type":22,"tag":54,"props":260,"children":262},{"className":261},[],[263],{"type":27,"value":264},"/api/users",{"type":27,"value":266}," route, you should see a list of all the users in your database.",{"type":22,"tag":268,"props":269,"children":271},"h3",{"id":270},"video-tutorial",[272],{"type":27,"value":273},"Video Tutorial",{"type":22,"tag":23,"props":275,"children":276},{},[277],{"type":27,"value":278},"If you enjoy learning through video tutorials, I have created a video where i walk you through the above steps:",{"type":22,"tag":280,"props":281,"children":289},"iframe",{"loading":282,"style":283,"src":284,"title":285,"frameBorder":286,"allow":287,"allowFullScreen":288},"lazy","border: 0; top: 0; left: 0; width: 100%; height: 350px;","https://www.youtube.com/embed/h10sAu3ETr8","YouTube video player","0","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",true,[],{"type":22,"tag":268,"props":291,"children":293},{"id":292},"example-project",[294],{"type":27,"value":295},"Example Project",{"type":22,"tag":280,"props":297,"children":300},{"loading":282,"style":298,"src":299,"scrolling":7,"allowFullScreen":288},"border: 0; top: 0; left: 0; width: 100%; height: 500px;","https://stackblitz.com/edit/nuxt-server-utils?ctl=1&embed=1&file=nuxt.config.ts&hideNavigation=1",[],{"type":22,"tag":34,"props":302,"children":304},{"id":303},"method-2-creating-a-nitro-plugin",[305],{"type":27,"value":306},"Method 2: Creating a Nitro plugin",{"type":22,"tag":23,"props":308,"children":309},{},[310,312,319],{"type":27,"value":311},"Nuxt 3 uses ",{"type":22,"tag":89,"props":313,"children":316},{"href":314,"rel":315},"https://nitro.unjs.io/",[93],[317],{"type":27,"value":318},"Nitro",{"type":27,"value":320}," under the hood to power its server-side rendering capabilities. Nitro provides a simple API for creating plugins that can be used to extend the functionality of your Nuxt 3 application.\nIn this section, we'll create a Nitro plugin that will allow us to use MongoDB and Mongoose in our Nuxt 3 project.",{"type":22,"tag":23,"props":322,"children":323},{},[324,326,332],{"type":27,"value":325},"First, let's create a new plugin file in the ",{"type":22,"tag":54,"props":327,"children":329},{"className":328},[],[330],{"type":27,"value":331},"server/plugins",{"type":27,"value":333}," directory:",{"type":22,"tag":46,"props":335,"children":338},{"className":336,"code":337,"language":51,"meta":7},[49],"touch server/plugins/mongodb.ts\n",[339],{"type":22,"tag":54,"props":340,"children":341},{"__ignoreMap":7},[342],{"type":27,"value":337},{"type":22,"tag":23,"props":344,"children":345},{},[346],{"type":27,"value":347},"Then let's install the required dependencies:",{"type":22,"tag":46,"props":349,"children":352},{"className":350,"code":351,"language":51,"meta":7},[49],"npm install mongoose\n",[353],{"type":22,"tag":54,"props":354,"children":355},{"__ignoreMap":7},[356],{"type":27,"value":351},{"type":22,"tag":23,"props":358,"children":359},{},[360],{"type":27,"value":361},"Next, let's add the following code to the newly created plugin file:",{"type":22,"tag":46,"props":363,"children":367},{"className":364,"code":365,"filename":366,"language":166,"meta":7},[164],"import { Nitro } from \"nitropack\";\nimport mongoose from \"mongoose\";\n\nexport default async (_nitroApp: Nitro) => {\n  const config = useRuntimeConfig();\n\n  try {\n    await mongoose.connect(config.mongodbUri);\n    console.log(\"Connected to MongoDB\");\n  } catch (e) {\n    console.error(e);\n  }\n};\n","server/plugins/mongodb.ts",[368],{"type":22,"tag":54,"props":369,"children":370},{"__ignoreMap":7},[371],{"type":27,"value":365},{"type":22,"tag":23,"props":373,"children":374},{},[375,377,383,385,390],{"type":27,"value":376},"Finally, let's add the plugin to the ",{"type":22,"tag":54,"props":378,"children":380},{"className":379},[],[381],{"type":27,"value":382},"plugins",{"type":27,"value":384}," section of our ",{"type":22,"tag":54,"props":386,"children":388},{"className":387},[],[389],{"type":27,"value":132},{"type":27,"value":134},{"type":22,"tag":46,"props":392,"children":395},{"className":393,"code":394,"filename":132,"language":166,"meta":7},[164],"export default defineNuxtConfig({\n  // ...\n  nitro: {\n    plugins: [\"~/server/plugins/mongodb.ts\"],\n  },\n});\n",[396],{"type":22,"tag":54,"props":397,"children":398},{"__ignoreMap":7},[399],{"type":27,"value":394},{"type":22,"tag":23,"props":401,"children":402},{},[403],{"type":27,"value":404},"That's it! Now you can use mongoose in your Nuxt 3 server routes like how it is normally used in Express.",{"type":22,"tag":268,"props":406,"children":408},{"id":407},"video-tutorial-1",[409],{"type":27,"value":273},{"type":22,"tag":23,"props":411,"children":412},{},[413],{"type":27,"value":414},"If you prefer video tutorials, you can watch the following video where I walk you through the process of adding MongoDB and Mongoose to a Nuxt 3 project:",{"type":22,"tag":280,"props":416,"children":418},{"loading":282,"style":283,"src":417,"title":285,"frameBorder":286,"allow":287,"allowFullScreen":288},"https://www.youtube.com/embed/EidO0c9L6b0",[],{"type":22,"tag":268,"props":420,"children":422},{"id":421},"example-project-1",[423],{"type":27,"value":295},{"type":22,"tag":23,"props":425,"children":426},{},[427],{"type":27,"value":428},"Play around with the example project to get a better understanding of how to use MongoDB and Mongoose with Nuxt 3.",{"type":22,"tag":280,"props":430,"children":432},{"loading":282,"style":298,"src":431,"scrolling":7,"allowFullScreen":288},"https://stackblitz.com/github/jahidanowar/nuxt3-mongoose?ctl=1&embed=1&file=nuxt.config.ts&hideNavigation=1&theme=dark&view=editor",[],{"type":22,"tag":23,"props":434,"children":435},{},[436,438,445],{"type":27,"value":437},"You ca find the full source code of this example ",{"type":22,"tag":89,"props":439,"children":442},{"href":440,"rel":441},"https://github.com/jahidanowar/nuxt3-mongoose",[93],[443],{"type":27,"value":444},"here",{"type":27,"value":446},".",{"type":22,"tag":34,"props":448,"children":450},{"id":449},"conclusion",[451],{"type":27,"value":452},"Conclusion",{"type":22,"tag":23,"props":454,"children":455},{},[456],{"type":27,"value":457},"In this blog post, we explored two simple yet effective methods to add MongoDB and Mongoose to your Nuxt 3 project. Whether you're a seasoned developer or just starting your journey in full-stack web development, this guide will help you leverage the capabilities of MongoDB and Mongoose within the Nuxt ecosystem.",{"type":22,"tag":23,"props":459,"children":460},{},[461,463,470,472,479],{"type":27,"value":462},"If you have any questions or feedback, feel free to reach out to me on ",{"type":22,"tag":89,"props":464,"children":467},{"href":465,"rel":466},"https://jahid.dev/d",[93],[468],{"type":27,"value":469},"Discord",{"type":27,"value":471}," or ",{"type":22,"tag":89,"props":473,"children":476},{"href":474,"rel":475},"https://twitter.com/jahidDev",[93],[477],{"type":27,"value":478},"Twitter",{"type":27,"value":446},{"title":7,"searchDepth":481,"depth":481,"links":482},2,[483,484,489,493],{"id":36,"depth":481,"text":39},{"id":79,"depth":481,"text":82,"children":485},[486,488],{"id":270,"depth":487,"text":273},3,{"id":292,"depth":487,"text":295},{"id":303,"depth":481,"text":306,"children":490},[491,492],{"id":407,"depth":487,"text":273},{"id":421,"depth":487,"text":295},{"id":449,"depth":481,"text":452},"markdown","content:posts:mongo-db.md","content","posts/mongo-db.md","posts/mongo-db","md",1739957882506]